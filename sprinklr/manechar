 string longestPalindrome(string s) {
       int n=s.length(),t=2;
        char c[2*n+3];
        n=2*n+3;
        c[0]='@',c[1]='$',c[n-1]='#';
        for(int i=0;i<s.length();i++)
        {
            c[t++]=s[i];
            c[t++]='$';
        }
        vector<int> z(n,0);
        int right=0,center=0,maxlen=0,index;
        for(int i=1;i<n-1;i++)
        {
            if(i<right)
            z[i]=min(right-i,z[2*center-i]);
            while(c[i+z[i]+1]==c[i-z[i]-1]) z[i]++;
            if(i+z[i]>right)
            {
             
                center=i;
                right=i+z[i];
            }
               if(maxlen<z[i])
                {
                    maxlen=z[i];
                    index=i;
                }
        }
        return s.substr((index-maxlen)/2,maxlen);
    }
