#include<bits//stdc++.h> 
using namespace std; 

bool CheckOddPalindrome(string T) { 
    int n=T.size();
    vector<int> p(n,0),q(n,0);
    int c=0,R=0;
    for(int i=0;i<n;i++){
        int mirror=2*c-i;
        p[i] = (R>i) ? min(R-i,p[mirror]) : 0 ;
        while(i+(1+p[i])<n && i-(1+p[i])>=0 && T[i+(1+p[i])]==T[i-(1+p[i])])
            p[i]++;
        if(i+p[i]>R){
            R=i+p[i];
            c=i;
        }
    }
    int start=0;
    int end=n-1;
    for(int i=0;i<n;i++){
        q[i]=2*min(i-start, end-i)+1;
    }
    
    for(int i=0;i<n;i++)
        p[i]=2*p[i]+1;
    for(int i=0;i<n;i++)
        cout<<T[i]<<" ";
    cout<<endl;
    for(int i=0;i<n;i++)
        cout<<p[i]<<" ";
    cout<<endl;
    for(int i=0;i<n;i++){
        cout<<q[i]<<" ";
    }
    cout<<endl;
    for(int i=0;i<n;i++){
        if(p[i]!=q[i]){
            return false;
        }
    }
    return true;
}

// Driver code 
int main() 
{ 
	string s = "aaaaaaa"; 
	if(CheckOddPalindrome(s)) 
		cout<<("YES"); 
	else
		cout<<("NO"); 
} 
