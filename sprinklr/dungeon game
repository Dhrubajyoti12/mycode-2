 int calculateMinimumHP(vector<vector<int>>& dungeon) {
        if(dungeon.size()==0 || dungeon[0].size()==0)
            return 0;
        int m=dungeon.size();
        int n=dungeon[0].size();
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                dp[i][j]=0;
        dp[m-1][n-1]=(dungeon[m-1][n-1]>=0)?1:(-1*dungeon[m-1][n-1])+1;
        return util(dp,dungeon,0,0);
    }
    int util(vector<vector<int>> &dp,vector<vector<int>> &dungeon,int i,int j)
    {
        if(i>=dungeon.size() || j>=dungeon[0].size())
            return INT_MAX;
        if(dp[i][j]!=0)
            return dp[i][j];
        int down=util(dp,dungeon,i+1,j);
        int right=util(dp,dungeon,i,j+1);
        int res=min(down,right)-dungeon[i][j];
        dp[i][j]=res<=0?1:res;
        return dp[i][j];
    }
