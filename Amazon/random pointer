/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
       if(head==NULL)
   return head;
   Node* copy;
   Node* curr=head;
   Node* temp;
   while(curr)
   {
       temp=curr->next;
       copy=new Node(curr->val);
       copy->next=temp;
       curr->next=copy;
       curr=temp;
   }
   curr=head;
   while(curr)
   {
       if(curr->next)
       curr->next->random=curr->random?curr->random->next:NULL;
       curr=curr->next?curr->next->next:NULL;
   }
   copy=temp=head->next;
   curr=head;
   while(copy)
   {
       curr->next=curr->next?curr->next->next:NULL;
       copy->next=copy->next?copy->next->next:NULL;
       curr=curr->next;
       copy=copy->next;
   }
   return temp;
    }
};
