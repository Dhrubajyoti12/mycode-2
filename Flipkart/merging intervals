class Solution {
public:
    static bool cmp(vector<int> &a,vector<int> &b)
    {
        return (a[0]<b[0]) ||(a[0]==b[0] && a[1]<b[1]);
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end(),cmp);
        int n=intervals.size();
        vector<vector<int>> res;
        if(n==0)
            return res;
        int start=intervals[0][0],prev=intervals[0][1];
        for(int i=1;i<n;i++)
        {
            if(prev<intervals[i][0])
            {
                res.push_back(vector<int>({start,prev}));
                start=intervals[i][0];
                prev=intervals[i][1];
            }
            else
            {
                prev=max(prev,intervals[i][1]);
            }
        }
        res.push_back(vector<int>({start,prev}));
        return res;
    }
};
